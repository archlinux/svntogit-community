# Maintainer: Felix Yan <felixonmars@archlinux.org>

_hkgname=gtk-sni-tray
pkgname=haskell-gtk-sni-tray
pkgver=0.1.8.1
pkgrel=54
pkgdesc="A standalone StatusNotifierItem/AppIndicator tray"
url="https://github.com/IvanMalison/gtk-sni-tray#readme"
license=("BSD")
arch=('x86_64')
depends=('ghc-libs' 'haskell-dbus' 'haskell-dbus-hslogger' 'haskell-enclosed-exceptions'
         'haskell-gi-cairo' 'haskell-gi-cairo-connector' 'haskell-gi-cairo-render'
         'haskell-gi-dbusmenugtk3' 'haskell-gi-gdk3' 'haskell-gi-gdkpixbuf' 'haskell-gi-glib'
         'haskell-gi-gtk3' 'haskell-gtk-strut' 'haskell-gi' 'haskell-gi-base' 'haskell-hslogger'
         'haskell-optparse-applicative' 'haskell-status-notifier-item' 'haskell-transformers-base'
         'gtk3')
makedepends=('ghc')
source=("https://hackage.haskell.org/packages/archive/$_hkgname/$pkgver/$_hkgname-$pkgver.tar.gz")
sha256sums=('ce977bb551bbd4a1898e43ad6c3cf8bd95181ec46e31a81c7b53956af40c2344')

build() {
  cd $_hkgname-$pkgver

  runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
    --prefix=/usr --docdir=/usr/share/doc/$pkgname --datasubdir=$pkgname --enable-tests \
    --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid --ghc-option=-fllvm \
    --ghc-option=-optl-Wl\,-z\,relro\,-z\,now \
    --ghc-option='-pie' 

  runhaskell Setup build $MAKEFLAGS
  runhaskell Setup register --gen-script
  runhaskell Setup unregister --gen-script
  sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
  sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
  cd $_hkgname-$pkgver
  runhaskell Setup test --show-details=direct
}

package() {
  cd $_hkgname-$pkgver

  install -D -m744 register.sh "$pkgdir"/usr/share/haskell/register/$pkgname.sh
  install -D -m744 unregister.sh "$pkgdir"/usr/share/haskell/unregister/$pkgname.sh
  runhaskell Setup copy --destdir="$pkgdir"
  install -D -m644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
  rm -f "$pkgdir"/usr/share/doc/$pkgname/LICENSE
}
