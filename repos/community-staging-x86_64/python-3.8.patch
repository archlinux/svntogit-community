From aa16ff9daec2153f47c3c6977bde31df221bb097 Mon Sep 17 00:00:00 2001
From: Lele Gaifax <lele@metapensiero.it>
Date: Sat, 2 Nov 2019 14:31:16 +0100
Subject: [PATCH] Use repr() instead of str() to obtain string representation
 of PyLong instances

In Python 3.8 they removed several __str__() implementations (see commit
https://github.com/python/cpython/commit/96aeaec64738b730c719562125070a52ed570210), so
under that version calling str() on an IntEnum instance gives something like
"<EnumName.attr: 123>", not the literal integer value as before, so the right thing, that
seems to work also on Python 3.7, is to use repr() instead.

This fixes issue #125.
---
 rapidjson.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/rapidjson.cpp b/rapidjson.cpp
index e649e52..32f527b 100644
--- a/rapidjson.cpp
+++ b/rapidjson.cpp
@@ -2267,11 +2267,11 @@ dumps_internal(
                 writer->Uint64(ui);
             }
         } else {
-            // Mimic stdlib json: subclasses of int may override __str__, but we still
+            // Mimic stdlib json: subclasses of int may override __repr__, but we still
             // want to encode them as integers in JSON; one example within the standard
             // library is IntEnum
 
-            PyObject* intStrObj = PyLong_Type.tp_str(object);
+            PyObject* intStrObj = PyLong_Type.tp_repr(object);
             if (intStrObj == NULL)
                 return false;
 
