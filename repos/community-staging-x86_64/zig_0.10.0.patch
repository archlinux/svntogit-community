From 3f4ab22d6c3e8f995ab5971d8c337d926fb0a172 Mon Sep 17 00:00:00 2001
From: Isaac Freund <mail@isaacfreund.com>
Date: Thu, 29 Sep 2022 11:16:26 +0200
Subject: [PATCH] build: update to zig master

---
 build.zig          |  2 +-
 deps/zig-wayland   |  2 +-
 deps/zig-xkbcommon |  2 +-
 src/Lock.zig       | 21 ++-------------------
 src/auth.zig       |  4 ++--
 src/pam.zig        |  2 +-
 6 files changed, 8 insertions(+), 25 deletions(-)

diff --git a/build.zig b/build.zig
index b9bd8d0..adddb19 100644
--- a/build.zig
+++ b/build.zig
@@ -91,7 +91,7 @@ pub fn build(b: *zbs.Builder) !void {

     waylock.addPackage(.{
         .name = "wayland",
-        .path = .{ .generated = &scanner.result },
+        .source = .{ .generated = &scanner.result },
     });
     waylock.step.dependOn(&scanner.step);
     waylock.addPackagePath("xkbcommon", "deps/zig-xkbcommon/src/xkbcommon.zig");
diff --git a/src/Lock.zig b/src/Lock.zig
index 0a34ceb..aaa810e 100644
--- a/src/Lock.zig
+++ b/src/Lock.zig
@@ -443,25 +443,8 @@ fn create_buffers(shm: *wl.Shm, options: Options) ![3]*wl.Buffer {

 fn shm_fd_create() !os.fd_t {
     switch (builtin.target.os.tag) {
-        .linux => {
-            return os.memfd_createZ("waylock-shm", os.linux.MFD_CLOEXEC);
-        },
-        .freebsd => {
-            // TODO upstream this to the zig standard library
-            const freebsd = struct {
-                const MFD_CLOEXEC = 1;
-                extern fn memfd_create(name: [*:0]const u8, flags: c_uint) c_int;
-            };
-
-            const ret = freebsd.memfd_create("waylock-shm", freebsd.MFD_CLOEXEC);
-            switch (os.errno(ret)) {
-                .SUCCESS => return ret,
-                .BADF => unreachable,
-                .INVAL => unreachable,
-                .NFILE => return error.SystemFdQuotaExceeded,
-                .MFILE => return error.ProcessFdQuotaExceeded,
-                else => |err| return os.unexpectedErrno(err),
-            }
+        .linux, .freebsd => {
+            return os.memfd_createZ("waylock-shm", os.linux.MFD.CLOEXEC);
         },
         else => @compileError("Target OS not supported"),
     }
diff --git a/src/auth.zig b/src/auth.zig
index 4c7da08..94ca6b2 100644
--- a/src/auth.zig
+++ b/src/auth.zig
@@ -102,7 +102,7 @@ pub fn run(conn: Connection) noreturn {

             const end_result = pamh.end(setcred_result);
             if (end_result != .success) {
-                log.err("PAM deinitialization failed: {s}", .{end_result});
+                log.err("PAM deinitialization failed: {s}", .{end_result.description()});
             }

             os.exit(0);
@@ -117,7 +117,7 @@ pub fn run(conn: Connection) noreturn {
             if (auth_result == .abort) {
                 const end_result = pamh.end(auth_result);
                 if (end_result != .success) {
-                    log.err("PAM deinitialization failed: {s}", .{end_result});
+                    log.err("PAM deinitialization failed: {s}", .{end_result.description()});
                 }
                 os.exit(1);
             }
diff --git a/src/pam.zig b/src/pam.zig
index 0e3693e..8b7f144 100644
--- a/src/pam.zig
+++ b/src/pam.zig
@@ -41,7 +41,7 @@ pub const Response = extern struct {
 };

 pub const Conv = extern struct {
-    conv: fn (
+    conv: *const fn (
         num_msg: c_int,
         /// Note: This matches the Linux-PAM API, apparently Solaris PAM differs
         /// in how the msg argument is used.
