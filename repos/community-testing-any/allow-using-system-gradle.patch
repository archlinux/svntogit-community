Subject: [PATCH] allow-using-system-gradle
---
Index: buildSrc/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildSrc/build.gradle b/buildSrc/build.gradle
--- a/buildSrc/build.gradle	(revision d998e63978abfedde3b75bab4ba6e1e78ddb5944)
+++ b/buildSrc/build.gradle	(date 1674638041199)
@@ -25,7 +25,6 @@
 }
 
 // Make sure the build environment is consistent.
-apply from: file('../gradle/validation/check-environment.gradle')
 
 // Load common buildSrc and script deps.
 apply from: file("scriptDepVersions.gradle")
Index: gradle/testing/alternative-jdk-support.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/testing/alternative-jdk-support.gradle b/gradle/testing/alternative-jdk-support.gradle
--- a/gradle/testing/alternative-jdk-support.gradle	(revision d998e63978abfedde3b75bab4ba6e1e78ddb5944)
+++ b/gradle/testing/alternative-jdk-support.gradle	(date 1674639345031)
@@ -3,6 +3,7 @@
 import org.gradle.internal.jvm.Jvm
 import org.gradle.internal.jvm.inspection.JvmInstallationMetadata
 import org.gradle.internal.jvm.inspection.JvmMetadataDetector
+import org.gradle.jvm.toolchain.internal.InstallationLocation
 
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
@@ -49,7 +50,7 @@
       doFirst {
 
         def jvmInfo = { JavaInfo javaInfo ->
-          JvmInstallationMetadata jvmMetadata = jvmDetector.getMetadata(javaInfo.javaHome)
+          JvmInstallationMetadata jvmMetadata = jvmDetector.getMetadata(new InstallationLocation(jvmCurrent.javaHome, "specific path")).getLanguageVersion()
           return "${jvmMetadata.languageVersion} (${jvmMetadata.displayName} ${jvmMetadata.runtimeVersion}, home at: ${jvmMetadata.javaHome})"
         }
 
@@ -86,6 +87,6 @@
 
 // Set up root project's properties.
 rootProject.ext.runtimeJavaHome = jvmCurrent.javaHome
-rootProject.ext.runtimeJavaVersion = jvmDetector.getMetadata(jvmCurrent.javaHome).languageVersion
+rootProject.ext.runtimeJavaVersion = jvmDetector.getMetadata(new InstallationLocation(jvmCurrent.javaHome, "specific path")).getLanguageVersion()
 rootProject.ext.usesAltJvm = (jvmGradle != jvmCurrent);
 
