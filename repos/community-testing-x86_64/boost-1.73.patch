diff -upr SoapyOsmo-soapy-osmo-0.2.5.orig/gr-osmosdr/lib/airspy/airspy_source_c.cc SoapyOsmo-soapy-osmo-0.2.5/gr-osmosdr/lib/airspy/airspy_source_c.cc
--- SoapyOsmo-soapy-osmo-0.2.5.orig/gr-osmosdr/lib/airspy/airspy_source_c.cc	2017-04-30 01:03:31.000000000 +0300
+++ SoapyOsmo-soapy-osmo-0.2.5/gr-osmosdr/lib/airspy/airspy_source_c.cc	2020-12-07 00:10:20.896211424 +0200
@@ -33,7 +33,6 @@
 
 #include <boost/assign.hpp>
 #include <boost/format.hpp>
-#include <boost/detail/endian.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/thread/thread.hpp>
 
diff -upr SoapyOsmo-soapy-osmo-0.2.5.orig/gr-osmosdr/lib/hackrf/hackrf_sink_c.cc SoapyOsmo-soapy-osmo-0.2.5/gr-osmosdr/lib/hackrf/hackrf_sink_c.cc
--- SoapyOsmo-soapy-osmo-0.2.5.orig/gr-osmosdr/lib/hackrf/hackrf_sink_c.cc	2017-04-30 01:03:31.000000000 +0300
+++ SoapyOsmo-soapy-osmo-0.2.5/gr-osmosdr/lib/hackrf/hackrf_sink_c.cc	2020-12-07 00:16:19.417763264 +0200
@@ -39,7 +39,6 @@
 
 #include <boost/assign.hpp>
 #include <boost/format.hpp>
-#include <boost/detail/endian.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/thread/thread.hpp>
 
diff -upr SoapyOsmo-soapy-osmo-0.2.5.orig/gr-osmosdr/lib/hackrf/hackrf_source_c.cc SoapyOsmo-soapy-osmo-0.2.5/gr-osmosdr/lib/hackrf/hackrf_source_c.cc
--- SoapyOsmo-soapy-osmo-0.2.5.orig/gr-osmosdr/lib/hackrf/hackrf_source_c.cc	2017-04-30 01:03:31.000000000 +0300
+++ SoapyOsmo-soapy-osmo-0.2.5/gr-osmosdr/lib/hackrf/hackrf_source_c.cc	2020-12-07 00:11:15.317449319 +0200
@@ -32,7 +32,7 @@
 
 #include <boost/assign.hpp>
 #include <boost/format.hpp>
-#include <boost/detail/endian.hpp>
+#include <boost/predef/other/endian.h>
 #include <boost/algorithm/string.hpp>
 #include <boost/thread/thread.hpp>
 
@@ -125,10 +125,10 @@ hackrf_source_c::hackrf_source_c (const
 
   // create a lookup table for gr_complex values
   for (unsigned int i = 0; i <= 0xffff; i++) {
-#ifdef BOOST_LITTLE_ENDIAN
+#ifdef BOOST_ENDIAN_LITTLE_BYTE
     _lut.push_back( gr_complex( (float(int8_t(i & 0xff))) * (1.0f/128.0f),
                                 (float(int8_t(i >> 8))) * (1.0f/128.0f) ) );
-#else // BOOST_BIG_ENDIAN
+#else // BOOST_ENDIAN_BIG_BYTE
     _lut.push_back( gr_complex( (float(int8_t(i >> 8))) * (1.0f/128.0f),
                                 (float(int8_t(i & 0xff))) * (1.0f/128.0f) ) );
 #endif
diff -upr SoapyOsmo-soapy-osmo-0.2.5.orig/gr-osmosdr/lib/rtl/rtl_source_c.cc SoapyOsmo-soapy-osmo-0.2.5/gr-osmosdr/lib/rtl/rtl_source_c.cc
--- SoapyOsmo-soapy-osmo-0.2.5.orig/gr-osmosdr/lib/rtl/rtl_source_c.cc	2017-04-30 01:03:31.000000000 +0300
+++ SoapyOsmo-soapy-osmo-0.2.5/gr-osmosdr/lib/rtl/rtl_source_c.cc	2020-12-07 00:14:15.811581477 +0200
@@ -32,7 +32,7 @@
 
 #include <boost/assign.hpp>
 #include <boost/format.hpp>
-#include <boost/detail/endian.hpp>
+#include <boost/predef/other/endian.h>
 #include <boost/algorithm/string.hpp>
 
 #include <stdexcept>
@@ -173,10 +173,10 @@ rtl_source_c::rtl_source_c (const std::s
 
   // create a lookup table for gr_complex values
   for (unsigned int i = 0; i <= 0xffff; i++) {
-#ifdef BOOST_LITTLE_ENDIAN
+#ifdef BOOST_ENDIAN_LITTLE_BYTE
     _lut.push_back( gr_complex( (float(i & 0xff) - 127.4f) * (1.0f/128.0f),
                                 (float(i >> 8) - 127.4f) * (1.0f/128.0f) ) );
-#else // BOOST_BIG_ENDIAN
+#else // BOOST_ENDIAN_BIG_BYTE
     _lut.push_back( gr_complex( (float(i >> 8) - 127.4f) * (1.0f/128.0f),
                                 (float(i & 0xff) - 127.4f) * (1.0f/128.0f) ) );
 #endif
