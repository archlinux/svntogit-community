commit e081b38ba9c918db344bf9a86b2672f7e175f3df
Author: Anatol Pomozov <anatol.pomozov@gmail.com>
Date:   Tue May 26 00:01:38 2020 -0700

    Patch config files with Arch Linux specific locations
    
    Arch uses upstream's default config files as a base for its configs.
    But directory structure at Arch is completely different from the default
    one specified by gitlab project.
    We used to have a lot of seds expressions to adjust the files but as
    complexity of configs grew 'sed' makes it easy to miss a changed/added
    option.
    
    Track set of diffs as a patch. If upstream modifies config file then it
    will cause a conflict that needs to be reviewed manually.

diff --git a/config/database.yml.postgresql b/config/database.yml.postgresql
index c1b1247b5b08..19c33fdd1f56 100644
--- a/config/database.yml.postgresql
+++ b/config/database.yml.postgresql
@@ -6,7 +6,7 @@ production:
     adapter: postgresql
     encoding: unicode
     database: gitlabhq_production
-    username: git
+    username: gitlab
     password: "secure password"
     host: localhost
     # load_balancing:
@@ -18,21 +18,6 @@ production:
     #     port: 8600
     #     record: secondary.postgresql.service.consul
     #     interval: 300
-  # ci:
-  #   adapter: postgresql
-  #   encoding: unicode
-  #   database: gitlabhq_production
-  #   database_tasks: false
-  #   username: git
-  #   password: "secure password"
-  #   host: localhost
-  geo:
-    adapter: postgresql
-    encoding: unicode
-    database: gitlabhq_geo_production
-    username: git
-    password: "secure password"
-    host: localhost
 
 #
 # Development specific
@@ -47,23 +32,6 @@ development:
     host: localhost
     variables:
       statement_timeout: 15s
-  # ci:
-  #   adapter: postgresql
-  #   encoding: unicode
-  #   database: gitlabhq_development
-  #   database_tasks: false
-  #   username: postgres
-  #   password: "secure password"
-  #   host: localhost
-  #   variables:
-  #     statement_timeout: 15s
-  geo:
-    adapter: postgresql
-    encoding: unicode
-    database: gitlabhq_geo_development
-    username: postgres
-    password: "secure password"
-    host: localhost
 
 #
 # Staging specific
@@ -73,22 +41,7 @@ staging:
     adapter: postgresql
     encoding: unicode
     database: gitlabhq_staging
-    username: git
-    password: "secure password"
-    host: localhost
-  # ci:
-  #   adapter: postgresql
-  #   encoding: unicode
-  #   database: gitlabhq_staging
-  #   database_tasks: false
-  #   username: git
-  #   password: "secure password"
-  #   host: localhost
-  geo:
-    adapter: postgresql
-    encoding: unicode
-    database: gitlabhq_geo_staging
-    username: git
+    username: gitlab
     password: "secure password"
     host: localhost
 
@@ -106,21 +59,3 @@ test: &test
     prepared_statements: false
     variables:
       statement_timeout: 15s
-  # ci:
-  #   adapter: postgresql
-  #   encoding: unicode
-  #   database: gitlabhq_test
-  #   database_tasks: false
-  #   username: postgres
-  #   password:
-  #   host: localhost
-  #   prepared_statements: false
-  #   variables:
-  #     statement_timeout: 15s
-  geo:
-    adapter: postgresql
-    encoding: unicode
-    database: gitlabhq_geo_test
-    username: postgres
-    password:
-    host: localhost
diff --git a/config/gitlab.yml.example b/config/gitlab.yml.example
index e8a88628a8ac..44bae1866848 100644
--- a/config/gitlab.yml.example
+++ b/config/gitlab.yml.example
@@ -91,7 +91,7 @@ production: &base
       #- 2001:0db8::/32
 
     # Uncomment and customize if you can't use the default user to run GitLab (default: 'git')
-    # user: git
+    user: gitlab
 
     ## Date & Time settings
     # Uncomment and customize if you want to change the default time zone of GitLab application.
@@ -111,15 +111,15 @@ production: &base
       # enabled: false
       # S/MIME private key file in PEM format, unencrypted
       # Default is '.gitlab_smime_key' relative to Rails.root (i.e. root of the GitLab app).
-      # key_file: /home/git/gitlab/.gitlab_smime_key
+      # key_file: /var/lib/gitlab/.gitlab_smime_key
       # S/MIME public certificate key in PEM format, will be attached to signed messages
       # Default is '.gitlab_smime_cert' relative to Rails.root (i.e. root of the GitLab app).
-      # cert_file: /home/git/gitlab/.gitlab_smime_cert
+      # cert_file: /var/lib/gitlab/.gitlab_smime_cert
       # S/MIME extra CA public certificates in PEM format, will be attached to signed messages
       # Optional
-      # ca_certs_file: /home/git/gitlab/.gitlab_smime_ca_certs
+      # ca_certs_file: /var/lib/gitlab/.gitlab_smime_ca_certs
 
-    # Email server smtp settings are in config/initializers/smtp_settings.rb.sample
+    # Email server smtp settings are in /etc/webapps/gitlab/smtp_settings.rb
     # File location to read encrypted SMTP secrets from
     # email_smtp_secret_file: /mnt/gitlab/smtp.yaml.enc # Default: shared/encrypted_settings/smtp.yaml.enc
 
@@ -167,7 +167,7 @@ production: &base
     ## Repository downloads directory
     # When a user clicks e.g. 'Download zip' on a project, a temporary zip file is created in the following directory.
     # The default is 'shared/cache/archive/' relative to the root of the Rails app.
-    # repository_downloads_path: shared/cache/archive/
+    repository_downloads_path: /var/lib/gitlab/shared/cache/archive
 
     ## Impersonation settings
     impersonation_enabled: true
@@ -234,7 +234,7 @@ production: &base
     # Since `mail_room` is run independently of Rails, an absolute path is preferred.
     # The default is 'log/mail_room_json.log' relative to the root of the Rails app.
     #
-    # log_path: log/mail_room_json.log
+    log_path: /var/log/gitlab/mail_room_json.log
 
     # If you are using Microsoft Graph instead of IMAP, set this to false to retain
     # messages in the inbox since deleted messages are auto-expunged after some time.
@@ -269,7 +269,7 @@ production: &base
     # contains the shared secret key for verifying access for mailroom's
     # incoming_email.
     # Default is '.gitlab_mailroom_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_mailroom_secret
+    # secret_file: /var/lib/gitlab/.gitlab_mailroom_secret
 
     # File location to read encrypted incoming email secrets from
     # encrypted_secret_file: /mnt/gitlab/smtp.yaml.enc 
@@ -309,7 +309,7 @@ production: &base
   artifacts:
     enabled: true
     # The location where build artifacts are stored (default: shared/artifacts).
-    # path: shared/artifacts
+    path: /var/lib/gitlab/shared/artifacts
     # object_store:
     #   enabled: false
     #   remote_directory: artifacts # The bucket name
@@ -328,7 +328,7 @@ production: &base
     # be stored on disk, or in object storage
     enabled: false
     # The location where external diffs are stored (default: shared/lfs-external-diffs).
-    # storage_path: shared/external-diffs
+    storage_path: /var/lib/gitlab/shared/external-diffs
     # object_store:
     #   enabled: false
     #   remote_directory: external-diffs
@@ -343,7 +343,7 @@ production: &base
   lfs:
     enabled: true
     # The location where LFS objects are stored (default: shared/lfs-objects).
-    # storage_path: shared/lfs-objects
+    storage_path: /var/lib/gitlab/shared/lfs-objects
     object_store:
       enabled: false
       remote_directory: lfs-objects # Bucket name
@@ -383,7 +383,7 @@ production: &base
     enabled: true
     dpkg_deb_path: /usr/bin/dpkg-deb
     # The location where build packages are stored (default: shared/packages).
-    # storage_path: shared/packages
+    storage_path: /var/lib/gitlab/shared/packages
     object_store:
       enabled: false
       remote_directory: packages # The bucket name
@@ -402,7 +402,7 @@ production: &base
   dependency_proxy:
     enabled: true
     # The location where build packages are stored (default: shared/dependency_proxy).
-    # storage_path: shared/dependency_proxy
+    storage_path: /var/lib/gitlab/shared/dependency_proxy
     object_store:
       enabled: false
       remote_directory: dependency_proxy # The bucket name
@@ -421,7 +421,7 @@ production: &base
   terraform_state:
     enabled: true
     # The location where Terraform state files are stored (default: shared/terraform_state).
-    # storage_path: shared/terraform_state
+    storage_path: /var/lib/gitlab/shared/terraform_state
     object_store:
       enabled: false
       remote_directory: terraform # The bucket name
@@ -457,7 +457,7 @@ production: &base
     enabled: false
     access_control: false
     # The location where pages are stored (default: shared/pages).
-    # path: shared/pages
+    path: /var/lib/gitlab/shared/pages
 
     # The domain under which the pages are served:
     # http://group.example.com/project
@@ -471,7 +471,7 @@ production: &base
 
     # File that contains the shared secret key for verifying access for gitlab-pages.
     # Default is '.gitlab_pages_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_pages_secret
+    secret_file: /var/lib/gitlab/.gitlab_pages_secret
     object_store:
       enabled: false
       remote_directory: pages # The bucket name
@@ -662,7 +662,7 @@ production: &base
     # port: 5005
     # api_url: http://localhost:5000/ # internal address to the registry, will be used by GitLab to directly communicate with API
     # key: config/registry.key
-    # path: shared/registry
+    path: /var/lib/gitlab/shared/registry
     # issuer: gitlab-issuer
     # notification_secret: '' # only set it when you use Geo replication feature without built-in Registry
 
@@ -713,7 +713,7 @@ production: &base
     # Default project notifications settings:
 
     # The location where build traces are stored (default: builds/). Relative paths are relative to Rails.root
-    # builds_path: builds/
+    builds_path: /var/lib/gitlab/builds
 
   #
   # 3. Auth settings
@@ -1179,7 +1179,7 @@ production: &base
 
   # Shared file storage settings
   shared:
-    # path: /mnt/gitlab # Default: shared
+    path: /var/lib/gitlab/shared # Default: shared
 
   # Encrypted Settings configuration
   encrypted_settings:
@@ -1204,14 +1204,14 @@ production: &base
     # real path not the symlink.
     storages: # You must have at least a `default` storage path.
       default:
-        path: /home/git/repositories/
-        gitaly_address: unix:/home/git/gitlab/tmp/sockets/private/gitaly.socket # TCP connections are supported too (e.g. tcp://host:port). TLS connections are also supported using the system certificate pool (eg: tls://host:port).
+        path: /var/lib/gitlab/repositories
+        gitaly_address: unix:/run/gitlab/gitlab-gitaly.socket # TCP connections are supported too (e.g. tcp://host:port). TLS connections are also supported using the system certificate pool (eg: tls://host:port).
         # gitaly_token: 'special token' # Optional: override global gitaly.token for this storage.
 
   ## Backup settings
   backup:
-    path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
-    # gitaly_backup_path: /home/git/gitaly/_build/bin/gitaly-backup # Path of the gitaly-backup binary (default: searches $PATH)
+    path: "/var/lib/gitlab/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
+    # gitaly_backup_path: /var/lib/gitaly/_build/bin/gitaly-backup # Path of the gitaly-backup binary (default: searches $PATH)
     # archive_permissions: 0640 # Permissions for the resulting backup.tar file (default: 0600)
     # keep_time: 604800   # default: 0 (forever) (in seconds)
     # pg_schema: public     # default: nil, it means that all schemas will be backed up
@@ -1246,12 +1246,12 @@ production: &base
 
   ## GitLab Shell settings
   gitlab_shell:
-    path: /home/git/gitlab-shell/
-    authorized_keys_file: /home/git/.ssh/authorized_keys
+    path: /usr/share/webapps/gitlab-shell
+    authorized_keys_file: /var/lib/gitlab/.ssh/authorized_keys
 
     # File that contains the secret key for verifying access for gitlab-shell.
     # Default is '.gitlab_shell_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_shell_secret
+    # secret_file: /var/lib/gitlab/.gitlab_shell_secret
 
     # Git over HTTP
     upload_pack: true
@@ -1266,13 +1266,13 @@ production: &base
   workhorse:
     # File that contains the secret key for verifying access for gitlab-workhorse.
     # Default is '.gitlab_workhorse_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_workhorse_secret
+    # secret_file: /var/lib/gitlab/.gitlab_workhorse_secret
 
   gitlab_kas:
     # enabled: true
     # File that contains the secret key for verifying access for gitlab-kas.
     # Default is '.gitlab_kas_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_kas_secret
+    # secret_file: /var/lib/gitlab/.gitlab_kas_secret
 
     # The URL to the external KAS API (used by the Kubernetes agents)
     # external_url: wss://kas.example.com
@@ -1290,7 +1290,7 @@ production: &base
 
   ## GitLab Elasticsearch settings
   elasticsearch:
-    indexer_path: /home/git/gitlab-elasticsearch-indexer/
+    indexer_path: /var/lib/gitlab/elasticsearch-indexer
 
   ## Git settings
   # CAUTION!
diff --git a/config/puma.rb.example b/config/puma.rb.example
index 59844b4aecff..0560d761e239 100644
--- a/config/puma.rb.example
+++ b/config/puma.rb.example
@@ -5,11 +5,11 @@
 # The default is "config.ru".
 #
 rackup 'config.ru'
-pidfile '/home/git/gitlab/tmp/pids/puma.pid'
-state_path '/home/git/gitlab/tmp/pids/puma.state'
+pidfile '/run/gitlab/puma.pid'
+state_path '/run/gitlab/puma.state'
 
-stdout_redirect '/home/git/gitlab/log/puma.stdout.log',
-  '/home/git/gitlab/log/puma.stderr.log',
+stdout_redirect '/var/log/gitlab/puma.stdout.log',
+  '/var/log/gitlab/puma.stderr.log',
   true
 
 # Configure "min" to be the minimum number of threads to use to answer
@@ -31,12 +31,12 @@ queue_requests false
 
 # Bind the server to "url". "tcp://", "unix://" and "ssl://" are the only
 # accepted protocols.
-bind 'unix:///home/git/gitlab/tmp/sockets/gitlab.socket'
+bind 'unix:///run/gitlab/gitlab.socket'
 
 workers 3
 
-require_relative "/home/git/gitlab/lib/gitlab/cluster/lifecycle_events"
-require_relative "/home/git/gitlab/lib/gitlab/cluster/puma_worker_killer_initializer"
+require_relative "/usr/share/webapps/gitlab/lib/gitlab/cluster/lifecycle_events"
+require_relative "/usr/share/webapps/gitlab/lib/gitlab/cluster/puma_worker_killer_initializer"
 
 on_restart do
   # Signal application hooks that we're about to restart
@@ -81,7 +81,7 @@ wait_for_less_busy_worker ENV.fetch('PUMA_WAIT_FOR_LESS_BUSY_WORKER', 0.001).to_
 nakayoshi_fork unless ENV['DISABLE_PUMA_NAKAYOSHI_FORK'] == 'true'
 
 # Use json formatter
-require_relative "/home/git/gitlab/lib/gitlab/puma_logging/json_formatter"
+require_relative "/usr/share/webapps/gitlab/lib/gitlab/puma_logging/json_formatter"
 
 json_formatter = Gitlab::PumaLogging::JSONFormatter.new
 log_formatter do |str|
