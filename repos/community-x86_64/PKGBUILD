# Maintainer: Felix Yan <felixonmars@archlinux.org>

_hkgname=servant-client-core
pkgname=haskell-servant-client-core
pkgver=0.19
pkgrel=40
pkgdesc="Core functionality and class for client function generation for servant APIs"
url="http://docs.servant.dev/"
license=("BSD")
arch=('x86_64')
depends=('ghc-libs' 'haskell-aeson' 'haskell-base-compat' 'haskell-base64-bytestring'
         'haskell-constraints' 'haskell-free' 'haskell-http-media' 'haskell-http-types'
         'haskell-network-uri' 'haskell-safe' 'haskell-servant' 'haskell-sop-core')
makedepends=('ghc' 'uusi' 'haskell-quickcheck' 'haskell-hspec' 'haskell-hspec-discover')
source=("https://hackage.haskell.org/packages/archive/$_hkgname/$pkgver/$_hkgname-$pkgver.tar.gz")
sha512sums=('42985eb842b3a6be6f352f2f0074a9a72de17c19ca9290f9f3c1ffc38d60cddd50d6eddede510e664d61e3d5f97a34fa56af22e7aa0e94a51d73db62b33d0585')

prepare() {
  cd $_hkgname-$pkgver
  uusi -u base-compat -u hspec $_hkgname.cabal
}

build() {
  cd $_hkgname-$pkgver

  runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
    --prefix=/usr --docdir=/usr/share/doc/$pkgname --datasubdir=$pkgname --enable-tests \
    --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid --ghc-option=-fllvm \
    --ghc-option=-optl-Wl\,-z\,relro\,-z\,now \
    --ghc-option='-pie'

  runhaskell Setup build $MAKEFLAGS
  runhaskell Setup register --gen-script
  runhaskell Setup unregister --gen-script
  sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
  sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
  cd $_hkgname-$pkgver
  runhaskell Setup test --show-details=direct
}

package() {
  cd $_hkgname-$pkgver

  install -D -m744 register.sh "$pkgdir"/usr/share/haskell/register/$pkgname.sh
  install -D -m744 unregister.sh "$pkgdir"/usr/share/haskell/unregister/$pkgname.sh
  runhaskell Setup copy --destdir="$pkgdir"
  install -D -m644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
  rm -f "$pkgdir"/usr/share/doc/$pkgname/LICENSE
}
