From c88e67e675bc4a990da53863c7fb42e67bcf9847 Mon Sep 17 00:00:00 2001
From: Julian Ospald <hasufell@posteo.de>
Date: Sun, 10 Oct 2021 00:46:36 +0200
Subject: [PATCH] cabal-install-parsers: Allow to build with aeson >=2 (#546)

* Allow to build with aeson >=2
* Allow to build haskell-ci with aeson >=2 as well
---
 cabal-install-parsers/cabal-install-parsers.cabal |  2 +-
 haskell-ci.cabal                                  |  2 +-
 src/HaskellCI/YamlSyntax.hs                       | 10 ++++++++++
 3 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/haskell-ci.cabal b/haskell-ci.cabal
index 670e0da9..3b99150f 100644
--- a/haskell-ci.cabal
+++ b/haskell-ci.cabal
@@ -153,7 +153,7 @@ library haskell-ci-internal
 
   -- other dependencies
   build-depends:
-    , aeson                          ^>=1.5.6.0
+    , aeson                          ^>=1.5.6.0 || ^>=2.0.0.0
     , attoparsec                     ^>=0.13.2.4
     , base-compat                    ^>=0.11
     , base16-bytestring              ^>=1.0.1.0
diff --git a/src/HaskellCI/YamlSyntax.hs b/src/HaskellCI/YamlSyntax.hs
index 47634056..1c98f835 100644
--- a/src/HaskellCI/YamlSyntax.hs
+++ b/src/HaskellCI/YamlSyntax.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP                 #-}
 {-# LANGUAGE DeriveFoldable      #-}
 {-# LANGUAGE DeriveFunctor       #-}
 {-# LANGUAGE DeriveTraversable   #-}
@@ -24,7 +25,12 @@ import Data.Monoid (Endo (..))
 
 import qualified Data.Aeson              as Aeson
 import qualified Data.Aeson.Encoding     as AE
+#if MIN_VERSION_aeson(2,0,0)
+import qualified Data.Aeson.Key          as AK
+import qualified Data.Aeson.KeyMap       as AKM
+#else
 import qualified Data.HashMap.Strict     as HM
+#endif
 import qualified Data.List.NonEmpty      as NE
 import qualified Data.Map.Strict         as M
 import qualified Data.Text               as T
@@ -340,7 +346,11 @@ encodeValue = TL.unpack . TLE.decodeUtf8 . AE.encodingToLazyByteString . enc whe
     enc (Aeson.Array v)  = AE.list enc (toList v)
     enc (Aeson.Object m) = AE.dict AE.text enc M.foldrWithKey (toMap m)
 
+#if MIN_VERSION_aeson(2,0,0)
+    toMap = M.fromList . fmap (\(k, v) -> (AK.toText k, v)) . AKM.toList
+#else
     toMap = M.fromList . HM.toList
+#endif
 
 -- a 'Line' is comments before in and actual text after!
 data Line = Line [String] ShowS
