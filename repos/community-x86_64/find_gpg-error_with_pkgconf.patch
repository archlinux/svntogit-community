diff --git a/Makefile.autosetup b/Makefile.autosetup
index 339c536eba..2ae61bc107 100644
--- a/Makefile.autosetup
+++ b/Makefile.autosetup
@@ -601,7 +601,7 @@ $(PWD)/mutt:
 LIBNCRYPT=	libncrypt.a
 LIBNCRYPTOBJS=	ncrypt/config.o ncrypt/crypt.o ncrypt/cryptglue.o \
 		ncrypt/crypt_mod.o
-@if HAVE_GPGME
+@if HAVE_PKG_GPGME
 LIBNCRYPTOBJS+=	ncrypt/crypt_gpgme.o ncrypt/dlg_gpgme.o \
 		ncrypt/gpgme_functions.o ncrypt/crypt_mod_pgp_gpgme.o \
 		ncrypt/crypt_mod_smime_gpgme.o
diff --git a/auto.def b/auto.def
index 34572c4e72..24fe5eb95f 100644
--- a/auto.def
+++ b/auto.def
@@ -478,88 +478,13 @@
     define-append CFLAGS -D_FILE_OFFSET_BITS=[get-define _FILE_OFFSET_BITS]
   }

-  msg-checking "Checking for GPGME..."
-  if {1} {
-    # Locate gpgme-config
-    set gpgme_prefix [opt-val with-gpgme $prefix]
-    set gpgme_config_guess [file join $gpgme_prefix bin gpgme-config]
-    if {[file-isexec $gpgme_config_guess]} {
-      define GPGME-CONFIG $gpgme_config_guess
-    } else {
-      if {![cc-check-progs gpgme-config]} {
-        user-error "Unable to find gpgme-config"
-      }
-    }
-    set gpgme_config [get-define GPGME-CONFIG]
+  pkgconf true gpgme
+  pkgconf true gpg-error
+	# Version might look like this: 1.13.1-unknown, so split on both '.' and '-'
+  lassign [split [get-define PKG_GPGME_VERSION] .-] gpgme_maj gpgme_min gpgme_patch

-    # Version
-    if {[catch {exec-with-stderr $gpgme_config --version} gpgme_version err]} {
-      user-error "Could not derive --version from $gpgme_config"
-    }
-    if {[scan $gpgme_version "%d.%d.%d" gpgme_maj gpgme_min gpgme_patch] != 3} {
-      user-error "Could not parse GPGME version $gpgme_version"
-    }
-    msg-result $gpgme_version
-    if {[get-define want-autocrypt]} {
-      if {$gpgme_maj < 1 || $gpgme_min < 8} {
-        user-error "Found GPGME version $gpgme_version, need 1.8.0 for AutoCrypt"
-      }
-    } else {
-      if {$gpgme_maj < 1 || $gpgme_min < 4} {
-        user-error "Found GPGME version $gpgme_version, need 1.4.0"
-      }
-    }
-    define GPGME_VERSION_NUMBER [format "0x%02x%02x%02x" $gpgme_maj $gpgme_min $gpgme_patch]
-
-    # RHEL6 doesn't have this function yet
-    cc-check-function-in-lib gpgme_op_export_keys gpgme
-
-    # CFLAGS
-    if {[catch {exec-with-stderr $gpgme_config --cflags} res err]} {
-      user-error "Could not derive --cflags from $gpgme_config"
-    }
-    define-append CFLAGS $res
-
-    # LIBS
-    if {[catch {exec-with-stderr $gpgme_config --libs} res err]} {
-      user-error "Could not derive --libs from $gpgme_config"
-    }
-    define-append LIBS $res
-  }
-  define-feature gpgme
-
-  msg-checking "Checking for gpg-error..."
-  if {1} {
-    # Locate gpg-error-config
-    set gpg_error_config_guess [file join $gpgme_prefix bin gpg-error-config]
-    if {[file-isexec $gpg_error_config_guess]} {
-      define GPG-ERROR-CONFIG $gpg_error_config_guess
-    } else {
-      if {![cc-check-progs gpg-error-config]} {
-        user-error "Unable to find gpg-error-config"
-      }
-    }
-    set gpg_error_config [get-define GPG-ERROR-CONFIG]
-
-    # Version
-    if {[catch {exec-with-stderr $gpg_error_config --version} gpg_error_version err]} {
-      user-error "Could not derive --version from $gpg_error_config"
-    }
-
-    # CFLAGS
-    if {[catch {exec-with-stderr $gpg_error_config --cflags} res err]} {
-      user-error "Could not derive --cflags from $gpg_error_config"
-    }
-    define-append CFLAGS $res
-
-    # LIBS
-    if {[catch {exec-with-stderr $gpg_error_config --libs} res err]} {
-      user-error "Could not derive --libs from $gpg_error_config"
-    }
-    define-append LIBS $res
-  }
-  msg-result $gpg_error_version

+	define GPGME_VERSION_NUMBER [format "0x%02x%02x%02x" $gpgme_maj $gpgme_min $gpgme_patch]
   define CRYPT_BACKEND_GPGME
 } 
