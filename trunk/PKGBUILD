# Maintainer: Felix Yan <felixonmars@archlinux.org>

_hkgname=snap-server
pkgname=haskell-snap-server
pkgver=1.1.2.0
pkgrel=401
pkgdesc="A web server for the Snap Framework"
url="https://github.com/snapframework/snap-server"
license=('BSD')
arch=('x86_64')
depends=('ghc-libs' 'haskell-attoparsec' 'haskell-blaze-builder' 'haskell-case-insensitive'
         'haskell-clock' 'haskell-io-streams' 'haskell-io-streams-haproxy' 'haskell-lifted-base'
         'haskell-network' 'haskell-old-locale' 'haskell-snap-core' 'haskell-unix-compat'
         'haskell-vector')
makedepends=('ghc' 'uusi')
checkdepends=('haskell-base16-bytestring' 'haskell-monad-control' 'haskell-random'
              'haskell-threads' 'haskell-hunit' 'haskell-quickcheck' 'haskell-http-streams'
              'haskell-http-common' 'haskell-parallel' 'haskell-test-framework'
              'haskell-test-framework-hunit' 'haskell-test-framework-quickcheck2')
source=(https://hackage.haskell.org/packages/archive/${_hkgname}/${pkgver}/${_hkgname}-${pkgver}.tar.gz)
sha512sums=('da17f988a364e6c04b29020a9e27fa5d8b98fe890577cb6ca4ee4cc3df016ac6a9ea6d8ffcae564f25efa0362f3bd454f72ad3344f7571ccaa620c6c1bf57665')

prepare() {
    cd $_hkgname-$pkgver
    uusi -d bytestring-builder -u attoparsec -u base -u unix-compat -u vector $_hkgname.cabal
    gen-setup
}

build() {
    cd $_hkgname-$pkgver
    
    if (( CHECKFUNC )); then
        _opts=('--enable-tests')
    else
        _opts=('--disable-tests')
    fi

    runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
        --prefix=/usr --docdir=/usr/share/doc/$pkgname --datasubdir=$pkgname "${_opts[@]}" \
        --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid --ghc-option=-fllvm
    runhaskell Setup build $MAKEFLAGS
    runhaskell Setup register --gen-script
    runhaskell Setup unregister --gen-script
    sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
    sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
    cd $_hkgname-$pkgver
    runhaskell Setup test --show-details=direct
}

package() {
    cd $_hkgname-$pkgver
    
    install -D -m744 register.sh "$pkgdir"/usr/share/haskell/register/$pkgname.sh
    install -D -m744 unregister.sh "$pkgdir"/usr/share/haskell/unregister/$pkgname.sh
    runhaskell Setup copy --destdir="$pkgdir"
    install -D -m644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
    rm -f "$pkgdir"/usr/share/doc/$pkgname/LICENSE
}
