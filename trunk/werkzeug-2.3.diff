diff --git a/moto/moto_server/werkzeug_app.py b/moto/moto_server/werkzeug_app.py
index 14f85517..234a74d4 100644
--- a/moto/moto_server/werkzeug_app.py
+++ b/moto/moto_server/werkzeug_app.py
@@ -201,7 +201,7 @@ class DomainDispatcherApplication:
         finally:
             if body:
                 # We've consumed the body = need to reset it
-                environ["wsgi.input"] = io.StringIO(body)
+                environ["wsgi.input"] = io.BytesIO(body.encode("utf-8"))
         return body
 
     def get_service_from_body(
diff --git a/tests/test_moto_api/recorder/__init__.py b/tests/test_moto_api/recorder/__init__.py
new file mode 100644
index 00000000..e69de29b
diff --git a/tests/test_moto_api/recorder/test_recorder.py b/tests/test_moto_api/recorder/test_recorder.py
index f716b3d6..5eef5919 100644
--- a/tests/test_moto_api/recorder/test_recorder.py
+++ b/tests/test_moto_api/recorder/test_recorder.py
@@ -1,3 +1,4 @@
+import base64
 import boto3
 import json
 import requests
@@ -81,8 +82,13 @@ class TestRecorder(TestCase):
 
         content = json.loads(self._download_recording())
 
-        content.should.have.key("body").should.contain("Action=RunInstances")
-        content.should.have.key("body").should.contain(f"ImageId={EXAMPLE_AMI_ID}")
+        if content.get("body_encoded"):
+            body = base64.b64decode(content.get("body")).decode("ascii")
+        else:
+            body = content["body"]
+
+        body.should.contain("Action=RunInstances")
+        body.should.contain(f"ImageId={EXAMPLE_AMI_ID}")
 
     def test_multiple_services(self):
         self._start_recording()
